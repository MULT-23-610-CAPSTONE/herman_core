data = "91.0#1.0%92.0#1.0%96.0#1.0%98.0#1.0%108.0#1.0%112.0#1.0%115.0#1.0%124.0#1.0%125.0#1.0%127.0#2.0%128.0#1.0%131.0#3.0%133.0#3.0%134.0#2.0%135.0#1.0%136.0#1.0%138.0#1.0%141.0#1.0%145.0#2.0%146.0#3.0%148.0#1.0%149.0#3.0%151.0#1.0%152.0#1.0%157.0#1.0%160.0#2.0%161.0#2.0%162.0#2.0%165.0#2.0%166.0#1.0%168.0#1.0%170.0#2.0%171.0#2.0%172.0#1.0%173.0#1.0%174.0#1.0%175.0#1.0%176.0#2.0%180.0#1.0%182.0#1.0%183.0#1.0%184.0#1.0%186.0#1.0%187.0#1.0%192.0#1.0%193.0#2.0%194.0#1.0%196.0#1.0%201.0#3.0%203.0#1.0%208.0#1.0%209.0#1.0%210.0#2.0%211.0#1.0%214.0#1.0%217.0#1.0%218.0#1.0%219.0#2.0%220.0#1.0%221.0#1.0%222.0#2.0%223.0#1.0%224.0#2.0%226.0#1.0%228.0#1.0%229.0#2.0%231.0#1.0%232.0#1.0%234.0#2.0%235.0#1.0%236.0#1.0%237.0#1.0%238.0#2.0%239.0#2.0%240.0#1.0%242.0#1.0%245.0#3.0%246.0#2.0%247.0#2.0%248.0#2.0%249.0#1.0%252.0#1.0%253.0#2.0%254.0#5.0%257.0#1.0%258.0#1.0%259.0#1.0%261.0#1.0%262.0#3.0%263.0#1.0%264.0#1.0%265.0#1.0%266.0#2.0%267.0#2.0%268.0#2.0%271.0#1.0%273.0#2.0%274.0#2.0%275.0#2.0%278.0#1.0%279.0#2.0%281.0#2.0%284.0#1.0%289.0#1.0%290.0#1.0%291.0#2.0%292.0#1.0%295.0#1.0%296.0#1.0%298.0#1.0%299.0#1.0%300.0#1.0%303.0#2.0%304.0#2.0%311.0#1.0%313.0#2.0%314.0#2.0%315.0#1.0%318.0#1.0%320.0#1.0%321.0#1.0%324.0#1.0%329.0#1.0%330.0#1.0%332.0#2.0%337.0#2.0%339.0#1.0%341.0#1.0%342.0#1.0%344.0#1.0%346.0#1.0%348.0#1.0%349.0#1.0%354.0#1.0%357.0#1.0%358.0#1.0%360.0#1.0%361.0#2.0%363.0#1.0%366.0#1.0%368.0#1.0%370.0#2.0%375.0#1.0%376.0#2.0%377.0#1.0%380.0#1.0%381.0#1.0%382.0#1.0%383.0#1.0%388.0#2.0%389.0#2.0%390.0#1.0%393.0#2.0%395.0#1.0%397.0#1.0%399.0#1.0%402.0#1.0%404.0#2.0%409.0#1.0%410.0#1.0%413.0#1.0%414.0#1.0%416.0#1.0%418.0#1.0%422.0#1.0%423.0#1.0%426.0#1.0%427.0#1.0%430.0#1.0%435.0#1.0%437.0#1.0%441.0#1.0%442.0#1.0%445.0#1.0%457.0#1.0%465.0#1.0%466.0#1.0%467.0#1.0%470.0#1.0%472.0#1.0%474.0#1.0%478.0#1.0%479.0#1.0%482.0#1.0%490.0#1.0%491.0#1.0%496.0#1.0%498.0#2.0%499.0#2.0%501.0#1.0%502.0#1.0%505.0#1.0%507.0#2.0%509.0#2.0%518.0#1.0%520.0#1.0%525.0#1.0%529.0#1.0%532.0#1.0%533.0#1.0%537.0#1.0%543.0#1.0%554.0#1.0%555.0#1.0%556.0#1.0%560.0#1.0%574.0#1.0%575.0#1.0%581.0#1.0%582.0#2.0%584.0#1.0%586.0#1.0%590.0#2.0%591.0#1.0%599.0#1.0%601.0#1.0%604.0#1.0%606.0#1.0%614.0#1.0%616.0#1.0%617.0#1.0%629.0#1.0%643.0#1.0%646.0#1.0%647.0#1.0%653.0#1.0%665.0#1.0%679.0#1.0%681.0#1.0%691.0#1.0%694.0#1.0%707.0#1.0%725.0#1.0%761.0#1.0%773.0#1.0%800.0#1.0%829.0#1.0%836.0#1.0%845.0#1.0%863.0#1.0%866.0#1.0%867.0#1.0%872.0#1.0%876.0#1.0%915.0#1.0%921.0#1.0%941.0#1.0%942.0#1.0%954.0#1.0%955.0#1.0%956.0#1.0%965.0#1.0%997.0#1.0%1071.0#1.0%1095.0#1.0%1113.0#1.0%1160.0#1.0%1208.0#1.0%1240.0#1.0%1251.0#1.0%1279.0#1.0%1415.0#1.0%1558.0#1.0%1702.0#1.0%1808.0#1.0%2213.0#1.0%2280.0#1.0%2313.0#1.0%2673.0#1.0%2750.0#1.0%2817.0#1.0%3030.0#1.0%3300.0#1.0%3936.0#1.0%4039.0#1.0%"

channels = []
counts = []    
measurements = data.split("%")
for i in range(0, len(measurements) - 1):
    single_data =  measurements[i].split("#")
    print(single_data)
    channels.append(single_data[0])
    counts.append(single_data[1])

# print(channels)
# print(counts)

#!/usr/bin/env python

import rospy
import matplotlib.pyplot as plt

from std_msgs.msg import String

class RadiationSensorSubscriber:
    def __init__(self):
        self.measurements = []
        self.fig, self.ax = plt.subplots()

    def radiation_sensor_callback(self, msg):
        # Split the string into a list of measurements
        measurements = msg.data.split('#')
        measurements = [float(x) for x in measurements]

        # Update the measurements and plot the new data
        self.measurements = measurements
        self.ax.clear()
        self.ax.plot(self.measurements)
        self.ax.set_xlabel('Measurement Index')
        self.ax.set_ylabel('Measurement Value')
        self.ax.set_title('Radiation Sensor Measurements')

        # Draw the plot
        self.fig.canvas.draw()

    def run(self):
        rospy.init_node('radiation_sensor_subscriber')

        # Subscribe to the radiation_sensor topic
        rospy.Subscriber('/radiation_sensor', String, self.radiation_sensor_callback)

        plt.show()

if __name__ == '__main__':
    node = RadiationSensorSubscriber()
    node.run()